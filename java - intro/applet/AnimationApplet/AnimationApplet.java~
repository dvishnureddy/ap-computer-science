import java.applet.*;
import java.awt.*;
import java.awt.geom.*;
import java.awt.event.*;
import java.util.*;
/**
 * Our first Animation Applet
 */

     public class AnimationApplet extends Applet implements Runnable, KeyListener
{
     //Declare any global variables here
     public LineShape line;
          
          
     private Thread animator;// this Thread will control the animation 
     private int delay = 10;// this value will control the amount of tme the Thread will sleep on each step of the animation (in milliseconds).
     
     private int x1, x2, y1, y2;
     
     private int x1Run, x1Dir, y1Rise, y1Dir, x2Run, x2Dir, y2Rise, y2Dir;
     
     public void init ()
     {
          //initialize any and all values for the applet
          line = new LineShape (50, 100, 150, 65, 1, 1, 1, 1, 1, -1, 1, -1);
          
          delay = 10;
          
          this.setFocusable (true);
          this.addKeyListener (this);
     }//end init method
     
     public void start ()
     {
          animator = new Thread (this);
          animator.start ();
     }//end start method
     
     public void stop ()
     {
          animator = null;
     }//end stop method
     
     public void paint (Graphics g)
     {
          Graphics2D g2 = (Graphics2D) g;
          
          line.setLine ();
          g2.draw (line.getLine());
     }//end paint method
     
     public void run ()
     {
          while (Thread.currentThread() == animator)
          {
               x1 += x1Run * x1Dir;
               y1 += y1Rise * y1Dir;
               x2 += x2Run * x2Dir;
               y2 += y2Rise * y2Dir;
               
               if (x1 < 0)
               {
                    x1 = 0;
                    x1Dir *= -1;
               }//end if
               else if (x1 > this.getWidth ())
               {
                    x1 = this.getWidth();
                    x1Dir *= -1;
               }// end else if 
               
               if (y1 < 0)
               {
                    y1 = 0;
                    y1Dir *= -1;
               }//end if
               else if (y1 > this.getHeight ())
               {
                    y1 = this.getHeight();
                    y1Dir *= -1;
               }//end else if
               
               if (x2 < 0)
               {
                    x2 = 0;
                    x2Dir *= -1;
               }//end if
               else if (x2 > this.getWidth ())
               {
                    x2 = this.getWidth();
                    x2Dir *= -1;
               }//end else if
               
               if (y2 < 0)
               {
                    y2 = 0;
                    y2Dir *= -1;
               }//end if
               else if (y2 > this.getHeight ())
               {
                    y2 = this.getHeight();
                    y2Dir *= -1;
               }//end else if
               
               repaint();
               
               try 
               {
                    Thread.sleep (delay); // have the thread sleep for "delay" milliseconds
               }//end try
               catch (InterruptedException e)
               {
                    System.exit (-1);
               }//end catch
          }//end while loop
     }//end run method
     
     public void keyReleased (KeyEvent e)
     {
     }
     
     public void keyPressed (KeyEvent e)
     {
          if (e.getKeyCode() == KeyEvent.VK_UP)
          {
               y1Rise++;
               if (y1Rise >= 20)
                    y1Rise = 20;
          }
          else if (e.getKeyCode() == KeyEvent.VK_DOWN)
          {
               y1Rise--;
               if (y1Rise >= 20)
                    y1Rise = 20;
          }
     }
     
     public void keyTyped (KeyEvent e)
     {
     }
               
}//end AnimationApplet applet